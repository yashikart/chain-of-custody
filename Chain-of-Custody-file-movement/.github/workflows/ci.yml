name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install backend dependencies
      run: npm ci
    
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci --legacy-peer-deps
    
    - name: Run backend tests
      run: npm test
    
    - name: Test hash generator
      run: |
        node hash-utilities/manual-hash-generator.js text "CI Test"
        echo "Test file content" > test-ci.txt
        node hash-utilities/manual-hash-generator.js file test-ci.txt
    
    - name: Build frontend
      run: |
        cd frontend
        npm run build
    
    - name: Start backend server (background)
      run: |
        npm start &
        sleep 10
    
    - name: Test API endpoints
      run: |
        curl -f http://localhost:3000/health || exit 1
        curl -f http://localhost:3000/api/upload/list || exit 1

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Run security audit
      run: |
        npm audit --audit-level moderate
        cd frontend && npm audit --audit-level moderate

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Check code formatting
      run: |
        # Add linting commands here when ESLint is configured
        echo "Code formatting check passed"
